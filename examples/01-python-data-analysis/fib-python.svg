<svg xmlns="http://www.w3.org/2000/svg" width="500" height="300" onload="init()">
  <style>
    .button {
      cursor: pointer;
      fill: #4CAF50;
      stroke: #45a049;
      stroke-width: 2;
      rx: 5;
      ry: 5;
    }
    .button:hover {
      fill: #45a049;
    }
    .button-text {
      fill: white;
      font-family: Arial, sans-serif;
      font-size: 14px;
      font-weight: bold;
      text-anchor: middle;
      user-select: none;
    }
  </style>
  
  <!-- Title -->
  <text x="20" y="40" font-family="Arial" font-size="20" font-weight="bold">
    Python Fibonacci Example
  </text>
  
  <!-- Input field -->
  <foreignObject x="20" y="60" width="200" height="30">
    <input type="number" id="fibInput" value="10" min="0" max="30" 
           style="width: 100%; height: 100%; font-size: 16px; padding: 5px;"/>
  </foreignObject>
  
  <!-- Calculate button -->
  <rect id="calculateBtn" x="240" y="60" width="100" height="30" class="button"/>
  <text x="290" y="80" class="button-text">Calculate</text>
  
  <!-- Result area -->
  <text x="20" y="120" font-family="Arial" font-size="16">
    Fibonacci(<tspan id="fibNumber" font-weight="bold">10</tspan>) = <tspan id="fibResult" font-weight="bold">?</tspan>
  </text>
  
  <!-- Python code display -->
  <rect x="20" y="150" width="460" height="130" fill="#f5f5f5" rx="5" ry="5"/>
  <text x="30" y="170" font-family="monospace" font-size="12" fill="#333">
    <tspan x="30" dy="1.2em"># Python code running in browser:</tspan>
    <tspan x="30" dy="1.5em" fill="#2b91af">def</tspan> <tspan fill="#74531f">fibonacci</tspan>(n):</tspan>
    <tspan x="40" dy="1.5em">    <tspan fill="#2b91af">if</tspan> n &lt;= 1:</tspan>
    <tspan x="40" dy="1.5em">        <tspan fill="#2b91af">return</tspan> n</tspan>
    <tspan x="40" dy="1.5em">    <tspan fill="#2b91af">return</tspan> fibonacci(n-1) + fibonacci(n-2)</tspan>
  </text>
  
  <!-- Loading indicator -->
  <g id="loadingIndicator" display="none">
    <rect x="20" y="250" width="460" height="20" fill="#e0e0e0" rx="10" ry="10"/>
    <rect id="loadingBar" x="20" y="250" width="0" height="20" fill="#4CAF50" rx="10" ry="10"/>
  </g>
  
  <!-- Error message -->
  <text id="errorMsg" x="20" y="290" font-family="Arial" font-size="12" fill="red" display="none"></text>
  
  <script>
    // Initialize Pyodide
    let pyodide;
    
    async function init() {
      try {
        // Show loading indicator
        const loadingIndicator = document.getElementById('loadingIndicator');
        loadingIndicator.style.display = '';
        
        // Animate loading bar
        const loadingBar = document.getElementById('loadingBar');
        let width = 0;
        const interval = setInterval(() => {
          width = (width + 10) % 460;
          loadingBar.setAttribute('width', width);
        }, 50);
        
        // Load Pyodide
        pyodide = await loadPyodide({
          indexURL: 'https://cdn.jsdelivr.net/pyodide/v0.23.4/full/'
        });
        
        // Clear loading indicator
        clearInterval(interval);
        loadingIndicator.style.display = 'none';
        
        // Set up event listeners
        setupEventListeners();
        
        // Calculate initial value
        calculateFibonacci();
        
      } catch (error) {
        console.error('Error initializing Pyodide:', error);
        showError('Failed to load Python runtime: ' + error.message);
      }
    }
    
    function setupEventListeners() {
      // Calculate button click
      document.getElementById('calculateBtn').addEventListener('click', calculateFibonacci);
      
      // Input field enter key
      document.getElementById('fibInput').addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          calculateFibonacci();
        }
      });
    }
    
    async function calculateFibonacci() {
      try {
        const input = document.getElementById('fibInput');
        const n = parseInt(input.value);
        
        // Validate input
        if (isNaN(n) || n < 0) {
          showError('Please enter a non-negative number');
          return;
        }
        
        // Limit input to prevent freezing the browser
        if (n > 30) {
          showError('Please enter a number â‰¤ 30 for performance reasons');
          return;
        }
        
        // Update UI
        document.getElementById('fibNumber').textContent = n;
        document.getElementById('fibResult').textContent = 'Calculating...';
        
        // Define the Python function
        await pyodide.runPythonAsync(`
          def fibonacci(n):
              if n <= 1:
                  return n
              return fibonacci(n-1) + fibonacci(n-2)
        `);
        
        // Call the Python function
        const result = await pyodide.runPythonAsync(`fibonacci(${n})`);
        
        // Update the result
        document.getElementById('fibResult').textContent = result;
        
        // Clear any previous errors
        hideError();
        
      } catch (error) {
        console.error('Error calculating Fibonacci:', error);
        showError('Error: ' + error.message);
      }
    }
    
    function showError(message) {
      const errorMsg = document.getElementById('errorMsg');
      errorMsg.textContent = message;
      errorMsg.style.display = '';
    }
    
    function hideError() {
      document.getElementById('errorMsg').style.display = 'none';
    }
  </script>
</svg>
